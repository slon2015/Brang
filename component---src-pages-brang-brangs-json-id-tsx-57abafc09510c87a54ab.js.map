{"version":3,"sources":["webpack:///./src/common/header.tsx","webpack:///./src/common/panel.tsx","webpack:///./src/common/brangInfo/index.tsx","webpack:///./src/pages/brang/{brangsJson.id}.tsx"],"names":["Header","styles","useStyles","Box","className","headerGap","header","Grid","container","IconButton","href","ChevronLeft","makeStyles","position","top","left","height","width","backgroundImage","theme","colors","headerBackground","Panel","children","Paper","paper","margin","border","borders","tableBorder","backgroundColor","transparentBackground","Body","data","name","description","startTime","endTime","link","tags","location","date","ThemeProvider","muiTheme","direction","item","Typography","variant","spacing","map","tag","i","key","color","tagColor","to","BrangInfo","brangsJson"],"mappings":"qPAKaA,EAAS,WACpB,IAAMC,EAASC,IACf,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,UAAWH,EAAOI,YACvB,kBAACF,EAAA,EAAD,CAAKC,UAAWH,EAAOK,QACrB,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACC,EAAA,EAAD,CAAYC,KAAK,KACf,kBAACC,EAAA,EAAD,WAQNT,EAAYU,YAAW,CAC3BN,OAAQ,CACNO,SAAU,QACVC,IAAK,IACLC,KAAM,IACNC,OAAQ,MACRC,MAAO,OACPC,gBAAiBC,IAAMC,OAAOC,kBAEhChB,UAAW,CACTW,OAAQ,S,YC3BCM,EAAQ,SAAC,GAAwC,IAAvCC,EAAuC,EAAvCA,SACftB,EAASC,IACf,OACE,kBAACsB,EAAA,EAAD,CAAOpB,UAAWH,EAAOwB,OACtBF,IAKDrB,EAAYU,YAAW,CAC3Ba,MAAO,CACLC,OAAQ,OACRC,OAAQR,IAAMS,QAAQC,YACtBC,gBAAiBX,IAAMC,OAAOW,yBCJrBC,EAAO,SAAC,GAAuB,IAAtBC,EAAsB,EAAtBA,KACbC,EAAqED,EAArEC,KAAMC,EAA+DF,EAA/DE,YAAaC,EAAkDH,EAAlDG,UAAWC,EAAuCJ,EAAvCI,QAASC,EAA8BL,EAA9BK,KAAMC,EAAwBN,EAAxBM,KAAMC,EAAkBP,EAAlBO,SAAUC,EAAQR,EAARQ,KACzDvC,IAEX,OACE,kBAACwC,EAAA,EAAD,CAAevB,MAAOwB,KACpB,kBAAC,EAAD,MACA,kBAACpC,EAAA,EAAD,CAAMC,WAAS,EAACoC,UAAU,UACxB,kBAACrC,EAAA,EAAD,CAAMsC,MAAI,GACR,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAAMb,GAC1B,kBAACY,EAAA,EAAD,CAAYC,QAAQ,MAAMN,GAF5B,IAE+C,6BAC7C,kBAACK,EAAA,EAAD,CAAYC,QAAQ,SAApB,YAAsCX,KACnCC,GAAW,oCACZ,6BAAK,kBAACS,EAAA,EAAD,CAAYC,QAAQ,SAApB,eACUV,IANnB,IAQS,6BACP,kBAACS,EAAA,EAAD,CAAYC,QAAQ,SAApB,qBAA+CP,GATjD,IASwE,6BACtE,kBAACjC,EAAA,EAAD,CAAMC,WAAS,EAACwC,QAAS,GACtBT,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,kBAAC5C,EAAA,EAAD,CAAMsC,MAAI,EAACO,IAAKD,GACd,kBAAC,IAAD,CAAKE,MAAOlC,IAAMC,OAAOkC,UAAWJ,UAMhD,kBAAC3C,EAAA,EAAD,CAAMsC,MAAI,GACR,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAASZ,GAAyB,6BACtD,kBAACW,EAAA,EAAD,CAAYC,QAAQ,SAClB,kBAAC,IAAD,CAAMQ,GAAIjB,GAAV,8BASRpC,EAAYU,YAAW,CAC3BsB,KAAM,K,UChCOsB,UAjBG,SAAC,GAAD,IAAGvB,EAAH,EAAGA,KAAH,OAAqC,kBAAC,EAAD,CAAMA,KAAMA,EAAKwB","file":"component---src-pages-brang-brangs-json-id-tsx-57abafc09510c87a54ab.js","sourcesContent":["import { Box, Grid, IconButton, makeStyles } from '@material-ui/core';\nimport { ChevronLeft } from '@material-ui/icons';\nimport React from 'react';\nimport { theme } from './lib/theme';\n\nexport const Header = () => {\n  const styles = useStyles()\n  return (\n    <>\n      <Box className={styles.headerGap}/>\n      <Box className={styles.header}>\n        <Grid container>\n          <IconButton href=\"/\">\n            <ChevronLeft/>\n          </IconButton>\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  header: {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    height: '10%',\n    width: '100%',\n    backgroundImage: theme.colors.headerBackground\n  },\n  headerGap: {\n    height: '10%'\n  }\n})\n","import { makeStyles, Paper } from '@material-ui/core';\nimport React, { PropsWithChildren } from 'react';\nimport { theme } from './lib/theme';\n\nexport const Panel = ({children}: PropsWithChildren<void>) => {\n  const styles = useStyles()\n  return (\n    <Paper className={styles.paper}>\n      {children}\n    </Paper>\n  )\n}\n\nconst useStyles = makeStyles({\n  paper: {\n    margin: \"24px\",\n    border: theme.borders.tableBorder,\n    backgroundColor: theme.colors.transparentBackground\n  }\n})\n","import { Grid, makeStyles, ThemeProvider, Typography } from '@material-ui/core';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport { Tag } from '../body/tag';\nimport { Header } from '../header';\nimport { DetailedBrangInfo } from '../lib/model';\nimport { muiTheme, theme } from '../lib/theme';\nimport { Panel } from '../panel';\n\ninterface BrangProps {\n  data: DetailedBrangInfo\n}\n\nexport const Body = ({data}: BrangProps) => {\n  const {name, description, startTime, endTime, link, tags, location, date} = data,\n    styles = useStyles();\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <Header/>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Panel>\n            <Typography variant=\"h1\">{name}</Typography>\n            <Typography variant=\"h2\">{date}</Typography> <br/>\n            <Typography variant=\"body2\">Начало в {startTime}</Typography>\n            {!!endTime && <>\n              <br/><Typography variant=\"body2\">\n                Окончание в {endTime}\n              </Typography>\n              </>} <br/>\n            <Typography variant=\"body2\">Место проведения: {location}</Typography> <br/>\n            <Grid container spacing={1}>\n              {tags.map((tag, i) =>\n                  <Grid item key={i}>\n                    <Tag color={theme.colors.tagColor}>{tag}</Tag>\n                  </Grid>\n                )}\n            </Grid>\n          </Panel>\n        </Grid>\n        <Grid item>\n          <Panel>\n            <Typography variant=\"body1\">{description}</Typography><br/>\n            <Typography variant=\"body2\">\n              <Link to={link}>Сылка на мероприятие</Link>\n            </Typography>\n          </Panel>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  )\n}\n\nconst useStyles = makeStyles({\n  name: {\n\n  }\n})\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { BrangQuery, QueryData } from \"../../common/lib/model\"\nimport { Body } from \"../../common/brangInfo\"\nimport '../styles.css'\n\nconst BrangInfo = ({ data }: QueryData<BrangQuery>) => <Body data={data.brangsJson}/>\n\nexport const query = graphql`\n  query getBarngInfo($id: String) {\n    brangsJson(id: {eq: $id}) {\n      date(formatString: \"D MMMM YYYY\", locale: \"ru\")\n      description\n      id\n      link\n      location\n      name\n      startTime\n      tags\n    }\n  }\n`\n\nexport default BrangInfo\n"],"sourceRoot":""}