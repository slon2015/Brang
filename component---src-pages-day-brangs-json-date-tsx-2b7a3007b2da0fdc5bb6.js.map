{"version":3,"sources":["webpack:///./src/common/panel.tsx","webpack:///./src/common/dayInfo/index.tsx","webpack:///./src/pages/day/{brangsJson.date}.tsx"],"names":["Panel","children","className","styles","useStyles","clsx","paper","makeStyles","margin","border","theme","borders","tableBorder","backgroundColor","colors","transparentBackground","Body","day","brangs","selectedCategories","categories","selectCategories","backRef","Grid","container","direction","spacing","alignItems","item","justifyContent","Typography","moment","format","changeSelectedCategories","map","brang","i","key","brangPanel","wrap","sm","xs","to","id","variant","name","time","startTime","tags","tag","muiTheme","fontSize","padding","lineHeight","pageDefault","Day","data","params","useState","selected","setSelected","allBrangsJson","nodes","filter","b","length","t","includes","date","allTagsJson"],"mappings":"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","file":"component---src-pages-day-brangs-json-date-tsx-2b7a3007b2da0fdc5bb6.js","sourcesContent":["import { makeStyles, Paper } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { theme } from './lib/theme';\r\n\r\ninterface PanelProps {\r\n  className?: string\r\n}\r\n\r\nexport const Panel = ({children, className}: PropsWithChildren<PanelProps>) => {\r\n  const styles = useStyles()\r\n  return (\r\n    <Paper className={clsx(styles.paper, className)}>\r\n      {children}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    margin: \"24px\",\r\n    border: theme.borders.tableBorder,\r\n    backgroundColor: theme.colors.transparentBackground\r\n  }\r\n})\r\n","import { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { CategorySelector } from \"../body/categorySelector\";\nimport { Tag } from \"../body/tag\";\nimport { Header } from \"../header\";\nimport { BrangDayInfo } from \"../lib/model\";\nimport { Panel } from \"../panel\";\n\ninterface BodyProps {\n  day: string\n  brangs: BrangDayInfo[],\n  categories: string[],\n  selectedCategories: string[],\n  selectCategories: (selected: string[]) => void\n}\n\nexport const Body = ({day, brangs, selectedCategories, categories, selectCategories}: BodyProps) => {\n  const styles = useStyles();\n  return (\n    <>\n      <Header backRef=\"/calendar\"/>\n      <Grid container direction=\"column\" spacing={3} alignItems=\"stretch\">\n        <Grid item>\n          <Panel>\n            <Grid container direction=\"column\" spacing={1} alignItems=\"stretch\">\n              <Grid item container justifyContent=\"center\">\n                <Typography className={styles.day}>\n                  {moment(day, \"YYYY-MM-DD\").format(\"D MMMM YYYY\")}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <CategorySelector\n                  categories={categories}\n                  selectedCategories={selectedCategories}\n                  changeSelectedCategories={selectCategories}/>\n              </Grid>\n            </Grid>\n          </Panel>\n        </Grid>\n        {\n          brangs.map((brang, i) => (\n            <Grid item key={i}>\n              <Panel className={styles.brangPanel}>\n                <Grid container justifyContent=\"space-between\" wrap=\"nowrap\" alignItems=\"center\" spacing={1}>\n                  <Grid item sm={8} xs={4}>\n                    <Link to={`/brang/${brang.id}`}>\n                      <Typography variant=\"h2\" className={styles.name}>{brang.name}</Typography>\n                    </Link>\n                  </Grid>\n                  <Grid item container direction=\"column\" alignItems=\"center\" spacing={2} sm={4} xs={8}>\n                    <Grid item>\n                      <Typography variant=\"h2\" className={styles.time}>\n                        {brang.startTime}\n                      </Typography>\n                    </Grid>\n                    <Grid item container justifyContent=\"center\" wrap=\"nowrap\">\n                      {brang.tags.map((tag, i) => (\n                        <Grid item key={i}>\n                          <Tag>\n                            {tag}\n                          </Tag>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Panel>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </>\n  )\n}\n\nconst useStyles = makeStyles(muiTheme => ({\n  name: {\n    fontSize: \"20px\",\n  },\n  time: {\n    fontSize: \"20px\",\n  },\n  brangPanel: {\n    padding: \"10px\"\n  },\n  day: {\n    fontSize: \"34px\",\n    lineHeight: \"40px\"\n  }\n}))\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport { useState } from 'react';\nimport { Body } from '../../common/dayInfo';\nimport { Layout } from '../../common/layout';\nimport { pageDefault } from '../../common/lib/common';\nimport { DateParam, DayQuery, QueryData } from '../../common/lib/model';\nimport { Head } from '../../common/seo';\n\npageDefault();\n\nexport const query = graphql`\n  query dayQuery($date: Date) {\n    allBrangsJson(filter: {date: {eq: $date}}) {\n      nodes {\n        id\n        name\n        startTime\n        tags\n      }\n    }\n    allTagsJson {\n      nodes {\n        name\n      }\n    }\n  }\n`\n\nconst Day = ({data, params}: QueryData<DayQuery, DateParam>) => {\n  const [selected, setSelected] = useState([] as string[]),\n    brangs = data.allBrangsJson.nodes.filter(b =>\n      selected.length == 0 || b.tags.filter(t => selected.includes(t)).length > 0)\n\n  return (\n    <Layout>\n      <Head/>\n      <Body\n       day={params.date}\n       brangs={brangs}\n       categories={data.allTagsJson.nodes.map(tag => tag.name)}\n       selectedCategories={selected}\n       selectCategories={setSelected}\n      />\n    </Layout>\n  )\n}\n\nexport default Day;\n"],"sourceRoot":""}